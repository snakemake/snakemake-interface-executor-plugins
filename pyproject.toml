[project]
name = "snakemake-interface-executor-plugins"
version = "9.3.5"
description = "This package provides a stable interface for interactions between Snakemake and its executor plugins."
authors = [{ name = "Johannes KÃ¶ster", email = "johannes.koester@uni-due.de" }]
license = { text = "MIT" }
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
  "snakemake-interface-common>=1.17.4",
  "throttler>=1.2.2",
  "argparse-dataclass>=2.0.0",
]

[tool.coverage.run]
omit = [".*", "*/site-packages/*"]

[tool.coverage.report]
fail_under = 63

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["osx-arm64", "linux-64"]

[tool.pixi.pypi-dependencies]

[tool.pixi.tasks]

[tool.pixi.environments]
dev = { features = ["dev"] }
publish = { features = ["publish"] }

[tool.pixi.feature.dev.pypi-dependencies]
snakemake-interface-executor-plugins = { path = ".", editable = true }
snakemake = { git = "https://github.com/snakemake/snakemake.git" }
snakemake-executor-plugin-cluster-generic = { git = "https://github.com/snakemake/snakemake-executor-plugin-cluster-generic.git" }

[tool.pixi.feature.dev.tasks.test]
cmd = [
  "pytest",
  "--cov=snakemake_interface_executor_plugins",
  "--cov-report=xml:coverage-report/coverage.xml",
  "--cov-report=term-missing",
  "tests/tests.py"
]
description = "Run tests and generate coverage report"


[tool.pixi.feature.dev.dependencies]
pytest = ">=8.3.5,<9"
ruff = ">=0.10.0,<0.11"
mypy = ">=1.15.0,<2"
pytest-cov = ">=6.0.0,<7"

[tool.pixi.feature.dev.tasks]
format = "ruff format snakemake_interface_executor_plugins"
lint = "ruff check"
type-check = "mypy snakemake_interface_executor_plugins/"
qc = { depends-on = ["format", "lint", "type-check"] }

[tool.mypy]
ignore_missing_imports = true

# Publish
[tool.pixi.feature.publish.dependencies]
twine = ">=6.1.0,<7"
python-build = ">=1.2.2,<2"

[tool.pixi.feature.publish.tasks]
build = { cmd = "python -m build", description = "Build the package into the dist/ directory" }
check-build = { cmd = "python -m twine check dist/*", depends-on = [
  "build",
], description = "Check that the package can be uploaded" }
